// ---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Main.h"
// ---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TMainForm * MainForm;

// ---------------------------------------------------------------------------
__fastcall TMainForm::TMainForm(TComponent * Owner) :
  TForm(Owner)
{
  fieldWidth=400;
  fieldHeight=220;
  ClientWidth=fieldWidth;
  ClientHeight=Panel1->Height+fieldHeight+1;
  frogOK=true;
  fEngine = new MFrogEngine();
  fEngine->Init();
  DrawField(false,true);
}

// ---------------------------------------------------------------------------
__fastcall TMainForm::~TMainForm()
{
  delete fEngine;
}

// ---------------------------------------------------------------------------
void __fastcall TMainForm::DrawField(bool aClear, bool aFrogOK)
{
  if (!fEngine)
  {
    return;
  }
  //
  MatrixData md = fEngine->GetSize();
  int startX = 0;
  int startY = Panel1->Height+1;
  int step = 20;
  int jba = 6;
  for (int i = 0; i < md.x; i++)
  {
    for (int q = 0; q < md.y; q++)
    {
      //Canvas->Brush->Color = clBlue;
      //TRect r = Rect(startX + i * step, startY + q * step, startX + i * step + step - 1, startY + q * step + step - 1);
      //Canvas->FrameRect(r);
      //
      TRect f = Rect(startX + i * step + 1, startY + q * step + 1, startX + i * step + step - 2, startY + q * step + step - 2);
      if (!aClear)
      {
        bool occupied = fEngine->GetTileState(i, q);
        if (occupied)
        {
          Canvas->Brush->Color = clYellow;
          Canvas->FillRect(f);
          //
          Graphics::TBitmap *bmp=Image6->Picture->Bitmap;
          if (bmp)
          {
            Canvas->Draw(startX + i * step,startY + q * step,bmp);
          }
        }
        else
        {
          Canvas->Brush->Color = clAqua;
          Canvas->FillRect(f);
        }
      }
      else
      {
        Canvas->Brush->Color = clWhite;
        Canvas->FillRect(f);
      }
      //
      MatrixData fd = fEngine->GetFrogCoords();
      if (i == fd.x && q == fd.y)
      {
        TColor jbaColor=clLime;
        Graphics::TBitmap *bmp=Image3->Picture->Bitmap;
        if (!aFrogOK)
        {
          jbaColor=clRed;
          bmp=Image4->Picture->Bitmap;
        }
        else if (fd.y==0)
        {
          jbaColor=clFuchsia;
          bmp=Image5->Picture->Bitmap;
        }
        if (bmp)
          Canvas->Draw(startX + i * step + step  / 2- bmp->Width/2,startY + q * step + step / 2-bmp->Height/2,bmp);
        else
        {
          Canvas->Brush->Color = jbaColor;
          Canvas->Ellipse(startX + i * step + step / 2 - jba, startY + q * step + step / 2 - jba, startX + i * step + step / 2 + jba, startY + q * step + step / 2 + jba);
        }
      }
    }
  }
}

// ---------------------------------------------------------------------------
void __fastcall TMainForm::Timer1Timer(TObject * Sender)
{
  if (!fEngine)
  {
    return;
  }
  //
  fEngine->MoveTiles();
  DrawField(false,true);
  int lives = fEngine->ManageFrogLives(0, 0,0);
  Label1->Caption = "Lives: " + IntToStr(lives);
  //
  int frogY=fEngine->GetFrogCoords().y;
  if (lives==0 || frogY==0)
  {
    frogOK=false;
    Timer1->Enabled=false;
    //
    Graphics::TBitmap *bmp=NULL;
    if (lives==0)
      bmp=Image1->Picture->Bitmap;
    else if (frogY==0)
      bmp=Image2->Picture->Bitmap;
    if (bmp)
    {
      int qq=20;
      for (int i=0; i<qq; i++)
      {
        int w=i*bmp->Width/qq;
        int h=i*bmp->Height/qq;
        int x=(ClientWidth-w)/2;
        int y=(ClientHeight+Panel1->Height-h)/2;
        TRect r=Rect(x,y,x+w,y+h);
        DrawField(false,true);
        Canvas->StretchDraw(r,bmp);
        ::Sleep(100);
      }
    }
  }
}
// ---------------------------------------------------------------------------

void __fastcall TMainForm::FormKeyDown(TObject * Sender, WORD & Key, TShiftState Shift)

{
  if (!frogOK)
    return;
  if (!fEngine)
  {
    return;
  }
  MatrixData md = fEngine->GetFrogCoords();
  MatrixData fd = fEngine->GetSize();
  //
  int moveX = md.x;
  int moveY = md.y;
  //
  if (Key == VK_UP)
  {
    if (md.y > 0)
    {
      moveX = md.x;
      moveY = md.y - 1;
    }
  }
  else if (Key == VK_DOWN)
  {
    if (md.y < fd.y - 1)
    {
      moveX = md.x;
      moveY = md.y + 1;
    }
  }
  else if (Key == VK_LEFT)
  {
    if (md.x > 0)
    {
      moveX = md.x - 1;
      moveY = md.y;
    }
  }
  else if (Key == VK_RIGHT)
  {
    if (md.x < fd.x - 1)
    {
      moveX = md.x + 1;
      moveY = md.y;
    }
  }
  //
  if (moveX != md.x || moveY != md.y)
  {
    fEngine->SetFrogCoords(moveX, moveY);
    bool ok=fEngine->GetTileState(moveX, moveY);
    DrawField(false,ok);
    if (!ok)
    {
      int lives = fEngine->ManageFrogLives(moveX, moveY, -1);
      Label1->Caption = "Lives: " + IntToStr(lives);
      fEngine->SetFrogCoords(fd.x / 2, fd.y - 1);
    }
  }
}
// ---------------------------------------------------------------------------
void __fastcall TMainForm::SpeedButton1Click(TObject *Sender)
{
  Close();
}
//---------------------------------------------------------------------------
void __fastcall TMainForm::SpeedButton2Click(TObject *Sender)
{
  delete fEngine;
  //
  Refresh();
  frogOK=true;
  fEngine = new MFrogEngine();
  fEngine->Init();
  DrawField(false,true);
  //
  Timer1->Enabled=true;
}
//---------------------------------------------------------------------------

